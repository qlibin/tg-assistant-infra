name: CD

on:
  push:
    branches: [ "main" ]
    paths:
      - "infrastructure/**"
      - "!infrastructure/test/**"
      - "!infrastructure/**/*.md"
      - ".github/workflows/cd.yml"
concurrency:
  group: pa-${{ github.ref_name }}
  cancel-in-progress: true

env:
  AWS_REGION: eu-central-1
  ENV_NAME: dev
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  RUN_BOOTSTRAP: ${{ vars.RUN_BOOTSTRAP || 'false' }}
  # API Gateway SourceArn propagated from GitHub Environment variable
  API_GATEWAY_SOURCE_ARN: ${{ vars.API_GATEWAY_SOURCE_ARN }}

jobs:
  build-validate-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: infrastructure/package-lock.json

      - name: Install infra dependencies
        working-directory: infrastructure
        run: npm ci

      - name: Infra Build
        working-directory: infrastructure
        run: npm run build

      - name: Infra Type-check
        working-directory: infrastructure
        run: npm run type-check

      - name: Infra Lint
        working-directory: infrastructure
        run: npm run lint

      - name: Infra Format check
        working-directory: infrastructure
        run: npm run format:check

      - name: Infra Tests
        working-directory: infrastructure
        run: npm run test

  cdk-deploy:
    runs-on: ubuntu-latest
    needs: build-validate-test
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsDeploymentRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: infrastructure/package-lock.json

      - name: Install infra dependencies
        working-directory: infrastructure
        run: npm ci

      - name: CDK Bootstrap (optional)
        if: env.RUN_BOOTSTRAP == 'true'
        working-directory: infrastructure
        env:
          CDK_NEW_BOOTSTRAP: "1"
        run: npx cdk bootstrap aws://${{ env.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}

      - name: Skip bootstrap (pre-bootstrapped account)
        if: env.RUN_BOOTSTRAP != 'true'
        run: echo "Skipping CDK bootstrap (RUN_BOOTSTRAP is not 'true'). Ensure the account is pre-bootstrapped using modern bootstrap."

      - name: CDK Deploy
        working-directory: infrastructure
        env:
          ENV_NAME: ${{ env.ENV_NAME }}
          API_GATEWAY_SOURCE_ARN: ${{ env.API_GATEWAY_SOURCE_ARN }}
        run: |
          npx cdk deploy --require-approval never -c environment=${ENV_NAME} -c apiGatewaySourceArn=${API_GATEWAY_SOURCE_ARN}
